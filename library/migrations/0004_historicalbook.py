# Generated by Django 5.0.6 on 2024-05-23 09:20

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('library', '0003_poll_historicalpoll'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalBook',
            fields=[
                ('image', models.TextField(blank=True, max_length=100, null=True)),
                ('id_book', models.IntegerField(blank=True, db_index=True)),
                ('book_status', models.CharField(choices=[('Черновик', 'Черновик'), ('Скрытый', 'Скрытый'), ('Открытый', 'Открытый')], default='Открытый', max_length=20)),
                ('udk', models.CharField(blank=True, max_length=20, null=True)),
                ('bbk', models.CharField(blank=True, max_length=20, null=True)),
                ('author_sign', models.CharField(blank=True, max_length=20, null=True)),
                ('language', models.CharField(choices=[('kg', 'Кыргызский'), ('ru', 'Русский'), ('eng', 'Английский')], default='ru', max_length=30)),
                ('title', models.CharField(max_length=140)),
                ('izdanie', models.CharField(blank=True, max_length=15, null=True)),
                ('discipline', models.CharField(blank=True, max_length=30, null=True, verbose_name='Предмет')),
                ('public_year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)])),
                ('publisher', models.CharField(blank=True, max_length=140, null=True, verbose_name='Издатель')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена')),
                ('cover_type', models.CharField(choices=[('Твёрдый', 'Твёрдый'), ('Мягкий', 'Мягкий'), ('Пружинный', 'Пружинный')], max_length=20, verbose_name='Тип обложки')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Дата поступления')),
                ('pages_amt', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Количество страниц')),
                ('number_of_copies', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999)], verbose_name='Количество копий')),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('isbn2', models.CharField(blank=True, max_length=20, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('data_full', models.BooleanField(default=False, verbose_name='Информация о книге полная')),
                ('online_copy', models.TextField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='library.section', verbose_name='Направление (секция)')),
            ],
            options={
                'verbose_name': 'historical book',
                'verbose_name_plural': 'historical books',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
